# First template  : {{ ansible_managed }}
# Second template : consul template

# Info on config http://www.haproxy.org/download/1.5/doc/configuration.txt
{% macro flatten_value(key, value) -%}
{%- if value is string -%}{# Value is a string #}
    {{ key }}    {{ value }}
{%- elif value is iterable -%}{# Value is a list #}
{% for nested_value in value %}
    {{ key }}    {{ nested_value }}
{% endfor %}
{%- endif -%}
{%- endmacro %}

global
    daemon
    spread-checks 2
    user    {{ consul_haproxy_user }}
    group   {{ consul_haproxy_user }}
    maxconn {{ consul_haproxy_maxconn }}
{{ flatten_value('log', consul_haproxy_log) }}
    stats  {{ consul_haproxy_stats_socket }}
{% if consul_haproxy_extra_global is defined %}
{% for key, value in consul_haproxy_extra_global.iteritems() %}
    {{ key }}  {{ value }}
{% endfor %}
{% endif %}

defaults
{{ flatten_value('log', consul_haproxy_default_log) }}
{{ flatten_value('option', consul_haproxy_default_options) }}
{{ flatten_value('maxconn', consul_haproxy_default_maxconn) }}
{{ flatten_value('timeout', consul_haproxy_default_timeout) }}
{{ flatten_value('retries', consul_haproxy_default_retries) }}
{{ flatten_value('balance', consul_haproxy_default_balance) }}
{% if consul_haproxy_extra_default is defined %}
{% for key, value in consul_haproxy_extra_default.iteritems() %}
    {{ key }}  {{ value }}
{% endfor %}
{% endif %}

{% if consul_haproxy_stats_enable == True %}
listen stats
    bind {{ consul_haproxy_stats_add | default("127.0.0.1") }}:{{ consul_haproxy_stats_port }}
    mode {{ consul_haproxy_stats_mode }}
    stats enable
    stats uri {{ consul_haproxy_stats_uri }}
{% endif %}

# consul_services
{% if consul_consumer_services is defined %}
{% for consumer_service in consul_consumer_services %}
{%  if consumer_service is mapping %}
{# Support new style of config #}
{% set service_name = consumer_service.name %}
{% set haproxy_setting = consul_services[service_name].haproxy | default({}) %}
frontend {{ consul_services[service_name].name }}
    mode {{ haproxy_setting.service_mode | default('http') }}
    timeout client  1h
    bind localhost:{{ consul_services[service_name].local_port | default(consul_services[service_name].port) }}
    default_backend {{ consul_services[service_name].name }}

backend {{ consul_services[service_name].name }}
    mode {{ haproxy_setting.service_mode | default('http') }}
    timeout  connect 10s
    timeout  server  1h
    {{ '{{range service' }} "{{ consul_services[service_name].name }}{{ consul_template_service_options_str }}" {{ '}}' }}
    {{'server {{.ID}}_{{.Address}}:{{.Port}} {{.Address}}:{{.Port}}' }} {{ haproxy_setting.server_options | default(consul_haproxy_default_server_options) }}{{ '{{end}}' }}
{%  else %}
{# Support old style config using service_name as a string #}
{% set service_name = consumer_service %}
{% set haproxy_setting = consul_services[service_name].haproxy | default({}) %}
frontend {{ consul_services[service_name].name }}
    mode {{ haproxy_setting.service_mode | default('http') }}
    timeout client  1h
    bind localhost:{{ consul_services[service_name].local_port | default(consul_services[service_name].port) }}
    default_backend {{ consul_services[service_name].name }}

backend {{ consul_services[service_name].name }}
    mode {{ haproxy_setting.service_mode | default('http') }}
    timeout  connect 10s
    timeout  server  1h
    {{ '{{range service' }} "{{ consul_services[service_name].name }}{{ consul_template_service_options_str }}" {{ '}}' }}
    {{'server {{.ID}}_{{.Address}}:{{.Port}} {{.Address}}:{{.Port}}' }} {{ haproxy_setting.server_options | default(consul_haproxy_default_server_options) }}{{ '{{end}}' }}
{%  endif %}
{% endfor %}
{% endif %}
