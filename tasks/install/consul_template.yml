---

- name: install | consul template install | Check tempalate archive stat
  stat:
    path="{{ consul_tmp_dir }}/{{ consul_template_archive }}"
  register: consul_template_archive_stat

- name: install | consul template | Download consul template (if needed)
  get_url:
    url="{{ consul_template_download_url }}"
    dest="{{ consul_tmp_dir }}"
    owner="{{ consul_user }}"
  register: consul_template_get
  when: consul_template_archive_stat.stat.exists == False

- name: install | consul template | Unpack consul arcive (if needed)
  unarchive:
    src="{{ consul_tmp_dir }}/{{ consul_template_archive }}"
    dest="{{ consul_bin_dir }}"
    copy="no"
    owner="{{ consul_user }}"
  when: consul_template_get | changed
  notify:
    - restart consul service

- name: install | consul template | Ensure consul-template configuration file is deployed
  template:
    src="consul_template.json.j2"
    dest="{{ consul_config_template_file }}"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0640"
  notify:
    - restart consul-template service

- name: install | consul template | Ensure consul run script is deployed
  template:
    src="consul_template_run.sh.j2"
    dest="{{ consul_bin_dir }}/consul_template_run.sh"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  notify:
    - restart consul-template service

- name: install | consul template | Ensure consul init.d script is deployed
  template:
    src="consul-template-init.d.sh.j2"
    dest="/etc/init.d/consul-template"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  when: "consul_service == 'service'"
  notify:
    - restart consul-template service

  # s6 service Block
- block:
  - name: install | consul template | Ensure consul-template s6 service directory exisit
    file:
      path="{{ item }}"
      state="directory"
      owner="{{ consul_user }}"
      group="{{ consul_group }}"
      mode=0755
    with_items:
     - "{{ consul_s6_servicedir }}/consul-template"
     - "{{ consul_s6_servicedir }}/consul-template/log"

  - name: install | consul template | Ensure consul-template s6 logs directory exisit
    file:
      path="/var/log/s6-consul-template"
      state="directory"
      owner="nobody"
      group="nobody"
      mode=0755

  - name: install | consul template | Ensure consul s6 script is deployed
    template:
      src="{{ item.src }}"
      dest="{{ item.dest }}"
      owner="{{ consul_user }}"
      group="{{ consul_group }}"
      mode="0755"
    with_items:
        - { src: "consul-template-s6.j2", dest: "{{ consul_s6_servicedir }}/consul-template/run"}
        - { src: "s6-log.j2", dest: "{{ consul_s6_servicedir }}/consul-template/log/run", log_dir: "/var/log/s6-consul-template", log_user: "consul"}
    notify:
      - restart consul service

  when: "consul_service == 's6'"

- name: install | consul template | Ensure templates is deployed
  template:
    src="{{ item.jtemplate }}"
    dest="{{ item.source }}"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  with_items: "{{ consul_template_templates }}"
  notify:
    - restart consul-template service
    - reload haproxy service

- name: install | consul template | Ensure HAproxy reload script is deployed
  template:
    src="haproxy-reload.j2"
    dest="{{ consul_bin_dir }}/haproxy-reload"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  notify:
    - restart consul-template service
    - reload haproxy service

- name: install | consul template | Ensure sudoers file to allow consul template to reload haproxy
  template:
   src="consul-template-sudo.j2"
   dest="/etc/sudoers.d/{{ consul_user }}"
   owner="root"
   group="root"
   mode="0440"
   validate='visudo -cf %s'